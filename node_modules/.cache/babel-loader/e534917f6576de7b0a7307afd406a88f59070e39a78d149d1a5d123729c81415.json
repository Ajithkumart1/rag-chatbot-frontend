{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:3001';\nclass ApiService {\n  constructor() {\n    this.client = axios.create({\n      baseURL: API_BASE_URL,\n      timeout: 10000\n    });\n  }\n  async createSession() {\n    try {\n      const response = await this.client.post('/api/session/new');\n      return response.data;\n    } catch (error) {\n      throw new Error(`Failed to create session: ${error.message}`);\n    }\n  }\n  async clearSession(sessionId) {\n    try {\n      const response = await this.client.delete(`/api/session/${sessionId}`);\n      return response.data;\n    } catch (error) {\n      throw new Error(`Failed to clear session: ${error.message}`);\n    }\n  }\n  async healthCheck() {\n    try {\n      const response = await this.client.get('/health');\n      return response.data;\n    } catch (error) {\n      throw new Error(`Health check failed: ${error.message}`);\n    }\n  }\n}\nexport default new ApiService();","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_BACKEND_URL","ApiService","constructor","client","create","baseURL","timeout","createSession","response","post","data","error","Error","message","clearSession","sessionId","delete","healthCheck","get"],"sources":["C:/Users/ajith/chatbot/rag-chatbot-project/rag-chatbot-frontend/src/services/apiService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:3001';\r\n\r\nclass ApiService {\r\n  constructor() {\r\n    this.client = axios.create({\r\n      baseURL: API_BASE_URL,\r\n      timeout: 10000,\r\n    });\r\n  }\r\n\r\n  async createSession() {\r\n    try {\r\n      const response = await this.client.post('/api/session/new');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(`Failed to create session: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async clearSession(sessionId) {\r\n    try {\r\n      const response = await this.client.delete(`/api/session/${sessionId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(`Failed to clear session: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async healthCheck() {\r\n    try {\r\n      const response = await this.client.get('/health');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(`Health check failed: ${error.message}`);\r\n    }\r\n  }\r\n}\r\n\r\nexport default new ApiService();\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,IAAI,uBAAuB;AAEjF,MAAMC,UAAU,CAAC;EACfC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,MAAM,GAAGP,KAAK,CAACQ,MAAM,CAAC;MACzBC,OAAO,EAAER,YAAY;MACrBS,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;EAEA,MAAMC,aAAaA,CAAA,EAAG;IACpB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACL,MAAM,CAACM,IAAI,CAAC,kBAAkB,CAAC;MAC3D,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6BD,KAAK,CAACE,OAAO,EAAE,CAAC;IAC/D;EACF;EAEA,MAAMC,YAAYA,CAACC,SAAS,EAAE;IAC5B,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAM,IAAI,CAACL,MAAM,CAACa,MAAM,CAAC,gBAAgBD,SAAS,EAAE,CAAC;MACtE,OAAOP,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,4BAA4BD,KAAK,CAACE,OAAO,EAAE,CAAC;IAC9D;EACF;EAEA,MAAMI,WAAWA,CAAA,EAAG;IAClB,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAM,IAAI,CAACL,MAAM,CAACe,GAAG,CAAC,SAAS,CAAC;MACjD,OAAOV,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,wBAAwBD,KAAK,CAACE,OAAO,EAAE,CAAC;IAC1D;EACF;AACF;AAEA,eAAe,IAAIZ,UAAU,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}